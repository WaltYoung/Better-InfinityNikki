name: Python Application BetterIN Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install nuitka
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Pre-install Dependency Walker
      run: |
        $dependsUrl = "https://dependencywalker.com/depends22_x64.zip"
        $downloadPath = "$env:RUNNER_TEMP\depends.zip"
        $installPath = "$env:LOCALAPPDATA\Nuitka\Nuitka\Cache\downloads\depends\x86_64"
        New-Item -Path $installPath -ItemType Directory -Force
        Invoke-WebRequest -Uri $dependsUrl -OutFile $downloadPath
        Expand-Archive -Path $downloadPath -DestinationPath $installPath -Force
        
    - name: Build with Nuitka
      run: |
        .\builder.bat

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build/
        retention-days: 1

  determine-version:
    needs: build
    runs-on: windows-latest
    outputs:
      new-tag: ${{ steps.tag-generation.outputs.new_tag }}
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate Semantic Version
      id: tag-generation
      uses: mathieudutour/github-tag-action@v6
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        default_bump: minor

  release:
    needs: [build, determine-version]
    if: success()
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: release-artifacts

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.determine-version.outputs.new-tag }}
        name: Release ${{ needs.determine-version.outputs.new-tag }}
        body: |
          Auto-generated release
          Commit SHA: ${{ github.sha }}
          Build Number: #${{ github.run_number }}
        files: |
          release-artifacts/**
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
